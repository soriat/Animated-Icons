/**********************
 *** Hamburger Icon ***
 **********************/

@import "generic.mixins";

// Icon Settings
$icon-border-radius: 0;
$icon-background-color: #FFF;
$icon-background-color-active: #FFF;

// Bar Settings
$bar-border-radius: 30px;
$bar-background-color: #000;
$bar-background-color-active: #000;

// Misc
$magnifications: 16px, 24px, 32px, 48px, 64px, 96px, 128px, 256px, 512px, 1024px;
$transition-duration: 0.2s;

// Functions for size manipulation
// Change these values to alter burger shape
@function thickness($size) {
  @return round($size / 10);
}

@function v-padding($size) {
  @return round($size / 8);
}

@function h-padding($size) {
  @return round($size / 5);
}

.hamburger {
   display: block;
   position: relative;
   margin: 0;
   padding: 0;
   cursor: pointer;
   background-color: $icon-background-color;
   border-radius: $icon-border-radius;
   @include transition(background $transition-duration);

   span {
      display: block;
      position: absolute;
      background: $bar-background-color;
      border-radius: $bar-border-radius;
      @include transition(background 0s $transition-duration);

      // Pseudo elements (top and bottom)
      &::before, &::after {
        content: "";
        display: block;
        position: absolute;
        left: 0;
        width: 100%;
        border-radius: $bar-border-radius;
        background-color: $bar-background-color;
        transition-duration: $transition-duration, $transition-duration;
        transition-delay: $transition-duration, 0s;
        transition-property: all, transform;
      }
   }

   &:focus {
     outline: none;
   }

   &.active {
      background-color: $icon-background-color-active;

      span {
         background: none;
         &::before {
           top: 0 !important;
           background: $bar-background-color-active;
           @include rotate(45deg);
           transition-delay: 0s, $transition-duration;
         }

         &::after {
           bottom: 0 !important;
           background: $bar-background-color-active;
           @include rotate(-45deg);
           transition-delay: 0s, $transition-duration;
         }
      }
   }

   @each $i in $magnifications {
      $index: index($magnifications, $i);
      $class: if($index == 1, "", ".ai-#{$index}x");

      &#{$class}, &.ai-#{$i} {
         width: $i;
         height: $i;

         span {
            top: floor(($i - thickness($i)) / 2);
            left: h-padding($i);
            right: h-padding($i);
            height: thickness($i);

            &::before {
              height: thickness($i);
              top: 0 - thickness($i) - v-padding($i);
            }

            &::after {
              height: thickness($i);
              bottom: 0 - thickness($i) - v-padding($i);
            }
         }
      }
   }
}
